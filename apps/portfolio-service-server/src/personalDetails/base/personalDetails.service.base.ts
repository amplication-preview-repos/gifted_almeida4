/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PersonalDetails as PrismaPersonalDetails,
} from "@prisma/client";

export class PersonalDetailsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PersonalDetailsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.personalDetails.count(args);
  }

  async personalDetailsItems(
    args: Prisma.PersonalDetailsFindManyArgs
  ): Promise<PrismaPersonalDetails[]> {
    return this.prisma.personalDetails.findMany(args);
  }
  async personalDetails(
    args: Prisma.PersonalDetailsFindUniqueArgs
  ): Promise<PrismaPersonalDetails | null> {
    return this.prisma.personalDetails.findUnique(args);
  }
  async createPersonalDetails(
    args: Prisma.PersonalDetailsCreateArgs
  ): Promise<PrismaPersonalDetails> {
    return this.prisma.personalDetails.create(args);
  }
  async updatePersonalDetails(
    args: Prisma.PersonalDetailsUpdateArgs
  ): Promise<PrismaPersonalDetails> {
    return this.prisma.personalDetails.update(args);
  }
  async deletePersonalDetails(
    args: Prisma.PersonalDetailsDeleteArgs
  ): Promise<PrismaPersonalDetails> {
    return this.prisma.personalDetails.delete(args);
  }
}
